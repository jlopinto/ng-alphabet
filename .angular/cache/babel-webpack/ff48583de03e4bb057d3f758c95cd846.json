{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/game.service\";\nimport * as i2 from \"src/app/services/letter-store.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../challenge-preview/challenge-preview.component\";\nimport * as i5 from \"@angular/common\";\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nexport let ConfigurationViewComponent = /*#__PURE__*/(() => {\n  class ConfigurationViewComponent {\n    constructor(game, store) {\n      this.game = game;\n      this.store = store;\n      this.toggleConfMenu = new EventEmitter();\n      this.subscriptions = new Subscription();\n      this.configurationForm = new FormGroup({\n        challengeCase: new FormControl(this.game.challengeCase),\n        isRandom: new FormControl(this.game.isRandom),\n        challenge: new FormControl(this.store.challenge, [Validators.required]),\n        spawnTimer: new FormControl(this.game.spawnSpeed / 1000),\n        fallingSpeed: new FormControl(this.game.fallingSpeed)\n      });\n    }\n\n    ngOnInit() {\n      this.configurationForm.controls.isRandom.valueChanges.subscribe(value => {\n        this.game.isRandom = value;\n        this.store.init(this.game);\n      });\n      this.configurationForm.controls.challengeCase.valueChanges.subscribe(value => {\n        this.game.challengeCase = value;\n        this.store.init(this.game);\n      });\n      this.configurationForm.controls.challenge.valueChanges.subscribe(value => {\n        this.store.setChallenge(value);\n        this.store.init(this.game);\n      });\n    }\n\n    cancelConf() {\n      this.toggleConfMenu.emit(false);\n    }\n\n    saveConf() {\n      const {\n        challenge,\n        isRandom,\n        challengeCase,\n        spawnTimer,\n        fallingSpeed\n      } = this.configurationForm.controls;\n\n      if (challenge.valid) {\n        this.store.setChallenge(challenge.value);\n      }\n\n      this.game.challengeCase = challengeCase.value;\n      this.game.isRandom = isRandom.value;\n      this.game.spawnSpeed = spawnTimer.value * 1000;\n      this.game.fallingSpeed = fallingSpeed.value;\n      this.toggleConfMenu.emit(false);\n      this.game.saveLocalPrefs();\n      return false;\n    }\n\n    resetConf() {\n      this.configurationForm.controls.challenge.setValue('abcdefghijklmnopqrstuvwxyz');\n      this.configurationForm.controls.challengeCase.setValue('isRandomCase');\n      this.configurationForm.controls.fallingSpeed.setValue(15);\n      this.configurationForm.controls.spawnTimer.setValue(5);\n      this.game.saveLocalPrefs();\n    }\n\n    ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n    }\n\n  }\n\n  ConfigurationViewComponent.ɵfac = function ConfigurationViewComponent_Factory(t) {\n    return new (t || ConfigurationViewComponent)(i0.ɵɵdirectiveInject(i1.GameService), i0.ɵɵdirectiveInject(i2.LettersStoreService));\n  };\n\n  ConfigurationViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ConfigurationViewComponent,\n    selectors: [[\"app-configuration-view\"]],\n    outputs: {\n      toggleConfMenu: \"toggleConfMenu\"\n    },\n    decls: 51,\n    vars: 7,\n    consts: [[1, \"modal-dialog\", \"modal-dialog-centered\"], [1, \"modal-content\", 3, \"formGroup\"], [1, \"modal-header\", \"justify-content-center\"], [1, \"modal-body\"], [1, \"form-group\", \"mt-3\"], [\"for\", \"challenge\"], [\"type\", \"text\", \"formControlName\", \"challenge\", \"id\", \"challenge\", \"maxlength\", \"48\", 1, \"form-control\", \"form-control-lg\", 3, \"ngClass\"], [\"id\", \"emailHelp\", 1, \"form-text\", \"text-muted\"], [1, \"form-group\", \"form-check\"], [\"type\", \"checkbox\", \"formControlName\", \"isRandom\", \"id\", \"isRandom\", 1, \"form-check-input\"], [\"for\", \"isRandom\", 1, \"form-check-label\"], [1, \"form-group\"], [1, \"form-check\"], [\"type\", \"radio\", \"formControlName\", \"challengeCase\", \"value\", \"isUpperCase\", \"id\", \"isUpperCase\", 1, \"form-check-input\"], [\"for\", \"isUpperCase\", 1, \"form-check-label\"], [\"type\", \"radio\", \"formControlName\", \"challengeCase\", \"value\", \"isLowerCase\", \"id\", \"isLowerCase\", 1, \"form-check-input\"], [\"for\", \"isLowerCase\", 1, \"form-check-label\"], [\"type\", \"radio\", \"formControlName\", \"challengeCase\", \"value\", \"isRandomCase\", \"id\", \"isRandomCase\", 1, \"form-check-input\"], [\"for\", \"isRandomCase\", 1, \"form-check-label\"], [\"for\", \"fallingSpeed\"], [\"type\", \"range\", \"min\", \".5\", \"max\", \"20\", \"step\", \".5\", \"formControlName\", \"fallingSpeed\", \"id\", \"fallingSpeed\", 1, \"form-control-range\"], [\"for\", \"spawnTimer\"], [\"type\", \"range\", \"min\", \".5\", \"max\", \"10\", \"step\", \".5\", \"formControlName\", \"spawnTimer\", \"id\", \"spawnTimer\", 1, \"form-control-range\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"]],\n    template: function ConfigurationViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"h1\");\n        i0.ɵɵtext(4, \"Configuration\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelement(6, \"app-challenge-preview\");\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵelementStart(8, \"label\", 5);\n        i0.ɵɵtext(9, \"La liste des lettres en jeu\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 6);\n        i0.ɵɵelementStart(11, \"small\", 7);\n        i0.ɵɵtext(12, \"Ce jeu a \\u00E9t\\u00E9 pens\\u00E9 pour afficher des lettres...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 8);\n        i0.ɵɵelement(14, \"input\", 9);\n        i0.ɵɵelementStart(15, \"label\", 10);\n        i0.ɵɵtext(16, \"Afficher les lettres dans le d\\u00E9sordre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 11);\n        i0.ɵɵelementStart(18, \"div\");\n        i0.ɵɵtext(19, \"D\\u00E9finir la format des lettres\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 12);\n        i0.ɵɵelement(21, \"input\", 13);\n        i0.ɵɵelementStart(22, \"label\", 14);\n        i0.ɵɵtext(23, \"En majuscules\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 12);\n        i0.ɵɵelement(25, \"input\", 15);\n        i0.ɵɵelementStart(26, \"label\", 16);\n        i0.ɵɵtext(27, \"En minuscule\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 12);\n        i0.ɵɵelement(29, \"input\", 17);\n        i0.ɵɵelementStart(30, \"label\", 18);\n        i0.ɵɵtext(31, \"M\\u00E9lange de minuscules et majuscules\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 11);\n        i0.ɵɵelementStart(33, \"label\", 19);\n        i0.ɵɵtext(34, \"Vitesse de chute des lettres\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"input\", 20);\n        i0.ɵɵelementStart(36, \"small\", 7);\n        i0.ɵɵtext(37);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 11);\n        i0.ɵɵelementStart(39, \"label\", 21);\n        i0.ɵɵtext(40, \"Fr\\u00E9quence d'apparition des lettres\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(41, \"input\", 22);\n        i0.ɵɵelementStart(42, \"small\", 7);\n        i0.ɵɵtext(43);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"div\", 23);\n        i0.ɵɵelementStart(45, \"button\", 24);\n        i0.ɵɵlistener(\"click\", function ConfigurationViewComponent_Template_button_click_45_listener() {\n          return ctx.cancelConf();\n        });\n        i0.ɵɵtext(46, \" Annuler \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"button\", 24);\n        i0.ɵɵlistener(\"click\", function ConfigurationViewComponent_Template_button_click_47_listener() {\n          return ctx.resetConf();\n        });\n        i0.ɵɵtext(48, \" Reset \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"button\", 25);\n        i0.ɵɵlistener(\"click\", function ConfigurationViewComponent_Template_button_click_49_listener() {\n          return ctx.saveConf();\n        });\n        i0.ɵɵtext(50, \" Valider \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.configurationForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, !ctx.configurationForm.controls.challenge.pristine && ctx.configurationForm.controls.challenge.invalid));\n        i0.ɵɵadvance(27);\n        i0.ɵɵtextInterpolate1(\"Actuellement d\\u00E9fini \\u00E0 \", ctx.configurationForm.controls.fallingSpeed.value, \"s\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\"Actuellement d\\u00E9fini \\u00E0 \", ctx.configurationForm.controls.spawnTimer.value, \"s\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"disabled\", ctx.configurationForm.invalid);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i4.ChallengePreviewComponent, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.MaxLengthValidator, i5.NgClass, i3.CheckboxControlValueAccessor, i3.RadioControlValueAccessor, i3.RangeValueAccessor],\n    styles: [\"[_nghost-%COMP%]{display:block}\"]\n  });\n  return ConfigurationViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}